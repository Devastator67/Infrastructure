- name: Ensure required stuff is here
  assert:
    that:
      - "{{ item }} is defined"
  with_items:
    - branch
    - version

# Sanity checks
- fail:
    msg: "Can't deploy {{ branch }} to production environment, only master is OK"
  when:
    - "'production' in inventory_dir and branch != 'master'"

- name: Clean up any previous build
  file:
    path: "{{ helix_path }}"
    state: absent
  become: true

- name: Ensure helix service is stopped (temp, killall)
  command: killall beam
  failed_when: false
  become: true
  become_user: "{{ helix_user }}"

- name: Ensure correct permissions on helix folder
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ helix_user }}"
    group: "{{ helix_group }}"
  with_items:
    - "{{ helix_path }}"
    - "{{ helix_path }}/src"
  become: true

- name: Download release
  s3:
    aws_access_key: "{{ private_aws_s3_release_access_key }}"
    aws_secret_key: "{{ private_aws_s3_release_secret_key }}"
    bucket: he2-releases
    object: "/helix/{{ branch }}/{{ version }}.tar.gz"
    dest: "{{ helix_path }}/helix.tar.gz"
    mode: get
  become: true
  become_user: "{{ helix_user }}"

# Unarchive module isn't good friends with BSDtar
- name: Extract release
  command: tar xf helix.tar.gz
  args:
    chdir: "{{ helix_path }}"
  become: true
  become_user: "{{ helix_user }}"

- name: Run migrations
  command: "{{ helix_path }}/bin/helix ecto_migrate"
  become: true
  become_user: "{{ helix_user }}"

- name: Output migration result
  debug:
    msg: "{{ _migrations_result.stdout_lines }}"
- debug:
    msg: "{{ _migrations_result.stderr_lines }}"

- name: Run (foreground, temp)
  command: "{{ helix_path }}/bin/helix start"
  become: true
  become_user: "{{ helix_user }}"
