######################################
# Ruleset based on the
## Click Death Squad's PF Ruleset v1.3
## by: iztehsux@gmail.com
#
# Modified for ansible Role by
# Nicolas Goy <kuon@goyman.com>
######################################

icmp_types = "{ echoreq, unreach }"
icmp6_types_in = "{ echoreq, unreach, neighbrsol, neighbradv, routeradv, timex, paramprob }"
icmp6_types_out = "{ echoreq, unreach, neighbrsol, routersol, timex, paramprob }"

### macro name for external interface.
ext_if = "{{ external_network_interface }}"
int_if = "{{ internal_network_interface }}"

# ansible macros
{%- for group in group_names %} 
  {%- set group_macros = group + '_pf_macros' -%}
  # Macros for group {{ group }}
  {% for macro in hostvars[inventory_hostname][group_macros] | default({}) -%}
    {{ macro }}
  {% endfor -%}
{%- endfor -%}
{{ pf_extra_macros | default() }}

### all incoming traffic on external interface is normalized and fragmented
### packets are reassembled.
scrub in on $ext_if all fragment reassemble

{# and then God said: thou shalt not understand Jinja's whitespace control #}
{%- for group in group_names %} 
  {%- set group_rules = group + '_pf_nat' -%}
  # NAT rules for group {{ group }}
  {% for rule in hostvars[inventory_hostname][group_rules] | default({}) -%}
    {{ rule }}
  {% endfor -%}
{%- endfor -%}


### set a default deny everything policy.
#block all

### exercise antispoofing on the external interface, but add the local
### loopback interface as an exception, to prevent services utilizing the
### local loop from being blocked accidentally.
set skip on lo0
antispoof for $ext_if inet

### block anything coming from sources that we have no back routes for.
block in from no-route to any

### block packets that fail a reverse path check. we look up the routing
### table, check to make sure that the outbound is the same as the source
### it came in on. if not, it is probably source address spoofed.
block in from urpf-failed to any

### drop broadcast requests quietly.
block in quick on $ext_if from any to 255.255.255.255

### ssh whitelist
{# {% for item in pf_ssh_whitelist %} #}
{# pass in quick on $ext_if proto tcp from {{ item }} to any port ssh #}
{# {% endfor %} #}

### block packets claiming to come from reserved internal address blocks, as
### they are obviously forged and cannot be contacted from the outside world.
block in log quick on $ext_if from { 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16, 255.255.255.255/32 } to any

### block probes that can possibly determine our operating system by disallowing
### certain combinations that are commonly used by nmap, queso and xprobe2, who
### are attempting to fingerprint the server.
### * F : FIN  - Finish; end of session
### * S : SYN  - Synchronize; indicates request to start session
### * R : RST  - Reset; drop a connection
### * P : PUSH - Push; packet is sent immediately
### * A : ACK  - Acknowledgement
### * U : URG  - Urgent
### * E : ECE  - Explicit Congestion Notification Echo
### * W : CWR  - Congestion Window Reduced
block in quick on $ext_if proto tcp flags FUP/WEUAPRSF
block in quick on $ext_if proto tcp flags WEUAPRSF/WEUAPRSF
block in quick on $ext_if proto tcp flags SRAFU/WEUAPRSF
block in quick on $ext_if proto tcp flags /WEUAPRSF
block in quick on $ext_if proto tcp flags SR/SR
block in quick on $ext_if proto tcp flags SF/SF

### keep state on any outbound tcp, udp or icmp traffic. modulate the isn of
### outgoing packets. (initial sequence number) broken operating systems
### sometimes don't randomize this number, making it guessable.
pass out on $ext_if proto { tcp, udp, icmp } from any to any modulate state
pass out on $ext_if inet6 proto { tcp, udp } from any to any keep state

# ICMP
pass inet proto icmp icmp-type $icmp_types
pass out on $ext_if inet6 proto icmp6 all icmp6-type $icmp6_types_out
pass in on $ext_if inet6 proto icmp6 all icmp6-type $icmp6_types_in

# Enable traceroute
pass out on $ext_if inet proto udp to port 33433:33626
pass out on $ext_if inet6 proto udp to port 33433:33626

### set a rule that allows inbound ssh traffic
pass in on $ext_if proto tcp from any to any port ssh flags S/SA

### custom rules set by ansible

{%- for group in group_names %} 
  {%- set group_rules = group + '_pf_rules' -%}
  # Rules for group {{ group }}
  {% for rule in hostvars[inventory_hostname][group_rules] | default({}) -%}
    {{ rule }}
  {% endfor -%}
{%- endfor -%}


### protect from ssh flood
#table <sshabuse> persist
#block in quick from <sshabuse>
#pass in on $ext_if proto tcp to any port ssh flags S/SA keep state (max-src-conn 10, max-src-conn-rate 3/5, overload <sshabuse> flush)
