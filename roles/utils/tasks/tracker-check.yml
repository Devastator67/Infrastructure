- include_role:
    name: utils
    tasks_from: assert
  vars:
    assert_defined:
      - from_role
      - task_file 
      - compare_with

- set_fact:
    file_path: "{{ playbook_dir }}/roles/{{ from_role }}/tasks/{{ task_file }}.yml"
    _tracked_hash: "{{ compare_with.hash | default() }}"

- shell: md5 "{{ file_path }}" | awk -F ' ' '{print $4}'
  register: _current_hash
  delegate_to: localhost
  changed_when: false

- set_fact:
    "_proceed_{{ from_role }}_{{ task_file }}": "{{ _current_hash.stdout != _tracked_hash }}"
    _hash: "{{ _hash | default({}) | combine( {item.name: item.hash} ) }}"
    # I have to set this intermediary var because YAML
    _fuck_ansible_and_yaml: "{{ _current_hash.stdout }}"
  with_items:
    - { name: "{{ from_role }}_{{ task_file }}", hash: "{{ _tracked_hash }}" }

# Replace remote hash with local hash when hashes are different
- set_fact:
    _hash: "{{ _hash | combine( {item.name: item.hash} ) }}"
  with_items:
    - { name: "{{ from_role }}_{{ task_file }}", hash: "{{ _fuck_ansible_and_yaml }}" }
  when:
    - "_proceed_{{ from_role }}_{{ task_file }}"

- set_fact:
    from_role: null
    task_file: null
    compare_with: null
